{"version":3,"sources":["services/Api.js","services/Restaurants.js","services/Users.js","services/Collections.js","components/Home.js","components/Registration.js","components/Login.js","components/Collection.js","App.js","index.js"],"names":["url","getAuthHeaders","headers","localStorage","getItem","Authorization","Api","get","endpoint","params","options","authenticate","baseURL","k","undefined","axios","post","body","put","delete","patch","Restaurants","search","name","day","time","page","limit","Users","register","user","collections","login","then","response","data","id","token","setItem","email","logout","removeItem","Collections","create","add","restaurantId","remove","update","Home","useForm","defaultValues","date","moment","format","handleSubmit","watch","setValue","history","useHistory","useState","fetching","setFetching","restaurants","setRestaurants","selectedRestaurant","setSelectedRestaurant","searchRestaurant","customPage","pagination","total","totalPages","setPagination","pages","number","push","Pagination","Item","key","active","onClick","newPage","toDate","getDay","getTime","toTime","setCollections","showCollections","setShowCollections","handleShowCollections","handleCloseCollections","showCreateCollection","setShowCreateCollection","handleCloseCreateCollection","registerCollection","handleSubmitCollection","collectionErrors","errors","newDate","Date","setUTCHours","getHours","setUTCMinutes","getMinutes","isTimeMatch","startTime","endTime","searchTime","isDayMatch","searchDate","useEffect","Container","Form","noValidate","autoComplete","onSubmit","Card","className","Body","Title","Row","Col","md","FormGroup","Label","Control","type","placeholder","ref","Footer","span","offset","Button","variant","length","map","restaurant","_id","Header","size","schedules","schedule","reduce","previous","match","filter","value","days","Badge","pill","toDay","Modal","show","onHide","collection","block","collectionId","catch","required","isInvalid","Feedback","Registration","error","setError","setShow","handleClose","toLowerCase","indexOf","Alert","pattern","password","validate","retypePassword","lg","to","Login","props","onAuthUpdate","message","Collection","owners","owner","App","state","isLoggedIn","getUser","setState","greetings","this","unauthenticatedLinks","Nav","Link","authenticatedLinks","links","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","path","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0990ce2f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst url = 'http://localhost:3000/api';\n\nconst getAuthHeaders = () => {\n  var headers =  {};\n  if (localStorage.getItem('token')) {\n    headers.Authorization = 'Bearer ' + localStorage.getItem('token');\n  }\n  return headers;\n};\n\nconst Api = {\n  get: (endpoint, params, options, authenticate = true) => {\n    if (!options) {\n      options = {\n        params: {},\n        headers: {}\n      };\n    }\n    options.baseURL = url;\n\n    if (params) {\n      options.params = {};\n      for (let k in params) {\n        if (params[k] !== undefined) {\n          options.params[k] = params[k];\n        }\n      }\n    }\n\n    if (authenticate) {\n      options.headers.Authorization = getAuthHeaders()['Authorization'];\n    }\n\n    return axios.get(endpoint, options);\n  },\n  post: (endpoint, body, options, authenticate = true) => {\n    if (!options) {\n      options = {\n        headers: {}\n      };\n    }\n    options.baseURL = url;\n\n    if (authenticate) {\n      options.headers.Authorization = getAuthHeaders()['Authorization'];\n    }\n\n    return axios.post(endpoint, body, options);\n  },\n  put: (endpoint, body, options, authenticate = true) => {\n    if (!options) {\n      options = {\n        headers: {}\n      };\n    }\n    options.baseURL = url;\n\n    if (authenticate) {\n      options.headers.Authorization = getAuthHeaders()['Authorization'];\n    }\n\n    return axios.put(endpoint, body, options);\n  },\n  delete: (endpoint, options, authenticate = true) => {\n    if (!options) {\n      options = {\n        headers: {}\n      };\n    }\n    options.baseURL = url;\n\n    if (authenticate) {\n      options.headers.Authorization = getAuthHeaders()['Authorization'];\n    }\n\n    return axios.delete(endpoint, options);\n  },\n  patch: (endpoint, body, options, authenticate = true) => {\n    if (!options) {\n      options = {\n        headers: {}\n      };\n    }\n    options.baseURL = url;\n\n    if (authenticate) {\n      options.headers.Authorization = getAuthHeaders()['Authorization'];\n    }\n\n    return axios.patch(endpoint, body, options);\n  }\n};\n\nexport default Api;","import Api from './Api';\n\nconst Restaurants = {\n  search: (name, day, time, page, limit) => {\n    return Api.get('restaurants', {\n      name: name,\n      day: day,\n      time: time,\n      page: page,\n      limit: limit\n    }, undefined, false);\n  }\n};\n\nexport default Restaurants;","import Api from './Api';\n\nconst Users = {\n  register: (user) => {\n    return Api.post('/users', user, undefined, false);\n  },\n  collections: () => {\n    return Api.get('/users/collections');\n  },\n  login: (user) => {\n    return Api.post('users/login', user, undefined, false)\n      .then((response) => {\n        const { id, token } = (response && response.data) || {};\n        localStorage.setItem('id', id);\n        localStorage.setItem('token', token);\n        localStorage.setItem('email', user.email);\n        return response.data;\n      });\n  },\n  logout: () => {\n    localStorage.removeItem('id');\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n  }\n};\n\nexport default Users;","\nimport Api from './Api';\n\nconst Collections = {\n  create: (name) => {\n    return Api.post('/collections', { name });\n  },\n  add: (id, restaurantId) => {\n    return Api.put(`/collections/${id}/add`, { restaurantId });\n  },\n  remove: (id, restaurantId) => {\n    return Api.delete(`/collections/${id}/remove/${restaurantId}`);\n  },\n  update: (id, name) => {\n    return Api.put(`/collections/${id}`, { name });\n  },\n  delete: (id) => {\n    return Api.delete(`/collections/${id}`);\n  },\n};\n\nexport default Collections;","import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport Restaurants from '../services/Restaurants';\nimport Users from '../services/Users';\nimport Collections from '../services/Collections';\nimport * as moment from 'moment';\nimport { Container, Row, Col, Form, Card, FormGroup, Button, Badge, Pagination, Modal } from 'react-bootstrap';\n\nfunction Home() {\n  const { register, handleSubmit, watch, setValue } = useForm({\n    defaultValues: {\n      name: undefined,\n      date: moment().format('YYYY-MM-DD'),\n      time: moment().format('HH:mm')\n    }\n  });\n  let history = useHistory();\n\n  const onSubmit = (data) => {\n    const { date, time, name } = data;\n    searchRestaurant(\n      name,\n      date ? moment.utc(date).toDate().getDay() : undefined,\n      time ? getTime(toTime(time)) : undefined,\n      1\n    );\n  };\n\n  const [fetching, setFetching] = useState(undefined);\n  const [restaurants, setRestaurants] = useState([]);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(undefined);\n  const searchRestaurant = (name, day, time, customPage) => {\n    if (fetching) {\n      return;\n    }\n    setFetching(true);\n    Restaurants\n      .search(name, day, time, customPage || pagination.page, pagination.limit)\n      .then(response => {\n        setFetching(false);\n        const {\n          data, limit, page, total, totalPages\n        } = (response && response.data) || {};\n        setRestaurants(data);\n        setPagination({\n          limit,\n          page,\n          total,\n          totalPages\n        });\n      });\n  };\n  const clearSearch = () => {\n    setValue('name', undefined);\n    setValue('date', undefined);\n    setValue('time', undefined);\n  };\n\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 5,\n    total: 0,\n    totalPages: 0\n  });\n  const onPageChange = (newPage) => {\n    searchRestaurant(\n      watch('name'),\n      watch('date') ? moment.utc(watch('date')).toDate().getDay() : undefined,\n      watch('time') ? getTime(toTime(watch('time'))) : undefined,\n      newPage\n    )\n  }\n  // Generate pagination pages\n  const pages = [];\n  for (let number = 1; number <= pagination.totalPages; number++) {\n    pages.push(\n      <Pagination.Item key={number} active={pagination.page === number} onClick={() => { onPageChange(number) }}>\n        {number}\n      </Pagination.Item>,\n    );\n  }\n\n  const [collections, setCollections] = useState([]);\n  const [showCollections, setShowCollections] = useState(false);\n  const handleShowCollections = () => setShowCollections(true);\n  const handleCloseCollections = () => {\n    setShowCollections(false);\n  };\n  const addToCollection = (id) => {\n    if (localStorage.getItem('id')) {\n      setSelectedRestaurant(id);\n      Users.collections()\n        .then((response) => {\n          setCollections(response && response.data ? response.data.data || [] : []);\n          handleShowCollections();\n        });\n    } else {\n      history.push('/login');\n    }\n  }\n  const handleSelectCollection = (collectionId) => {\n    Collections.add(collectionId, selectedRestaurant)\n      .then(()=> {\n        handleCloseCollections();\n      })\n      .catch(() => {\n        handleCloseCollections();\n      });\n  }\n  const [showCreateCollection, setShowCreateCollection] = useState(false);\n  const handleShowCreateCollection = () => setShowCreateCollection(true);\n  const handleCloseCreateCollection = () => {\n    setShowCreateCollection(false);\n  };\n  const { register: registerCollection, handleSubmit: handleSubmitCollection, errors: collectionErrors } = useForm({});\n  const onCollectionSubmit = (data) => {\n    Collections.create(data.name)\n      .then(response=> {\n        handleCloseCreateCollection()\n        Users.collections()\n          .then((response) => {\n            setCollections(response && response.data ? response.data.data || [] : []);\n            handleShowCollections();\n          });\n      });\n  }\n\n  const getTime = (time) => {\n    const newDate = new Date(0);\n    newDate.setUTCHours(time ? time.getHours() : 0);\n    newDate.setUTCMinutes(time ? time.getMinutes() : 0);\n    return newDate.getTime();\n  };\n\n  const groupSchedule = (schedules) =>  {\n    return schedules.reduce((previous, { day,  startTime, endTime, _id }) => {\n      const match = previous.filter((value) => {\n        return value.startTime === startTime && value.endTime === endTime;\n      })[0]\n      if (match) {\n        match.days.push(day);\n      } else {\n        previous.push({\n          _id,\n          startTime,\n          endTime,\n          days: [day]\n        });\n      }\n      return previous;\n    }, []);\n  }\n\n  const toTime = (time) => {\n    return time ? moment(time, 'HH:mm').toDate() : undefined;\n  };\n  // checks weather search time is in the sched of restaurant\n  const isTimeMatch = (startTime, endTime) => {\n    const searchTime = toTime(watch('time'));\n    if (!searchTime) {\n      return false;\n    }\n    const time = getTime(searchTime);\n    if (startTime < endTime) {\n      return time >= startTime && time <= endTime;\n    } else {\n      return time >= startTime || time <= endTime;\n    }\n  }\n\n  const toDay = (day) =>  {\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    return days[day];\n  };\n  // checks weather search date is in the sched of restaurant\n  const isDayMatch = (day) => {\n    const searchDate = watch('date');\n    if (!searchDate) {\n      return false;\n    }\n    return day === moment(searchDate, 'YYYY-MM-DD').toDate().getDay();\n  }\n\n  // Init\n  useEffect(() => {\n    searchRestaurant(undefined, new Date().getDay(), getTime(new Date()));\n  }, []);\n\n  return <>\n    <Container>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n        <Card className=\"mt-2\">\n          <Card.Body>\n            <Card.Title> <h5> Search for restaurant </h5></Card.Title>\n            <Row>\n              <Col md=\"4\">\n                <FormGroup>\n                  <Form.Label> Name </Form.Label>\n                  <Form.Control name=\"name\" type=\"text\" id=\"name\" placeholder=\"Type name here\" ref={register()} />\n                </FormGroup>\n              </Col>\n              <Col md=\"4\">\n                <FormGroup>\n                  <Form.Label> Date </Form.Label>\n                  <Form.Control name=\"date\" type=\"date\" id=\"date\" ref={register()}/>\n                </FormGroup>\n              </Col>\n              <Col md=\"4\">\n                <FormGroup>\n                  <Form.Label> Time </Form.Label>\n                  <Form.Control name=\"time\" type=\"time\" id=\"time\" ref={register()}/>\n                </FormGroup>\n              </Col>\n            </Row>\n          </Card.Body>\n          <Card.Footer>\n            <Row>\n              <Col md={{ span: 4 , offset: 4 }}>\n                <Button className=\"form-control\" type=\"submit\" variant=\"primary\"> Apply Search </Button>\n              </Col>\n              <Col md=\"4\">\n                <Button className=\"form-control\" type=\"button\" variant=\"secondary\" onClick={clearSearch}> Clear Search </Button>\n              </Col>\n            </Row>\n          </Card.Footer>\n        </Card>\n      </Form>\n    </Container>\n    <Container>\n      { restaurants && restaurants.length ? <div>\n        <h3> Result: { pagination.total } </h3>\n        { restaurants.map(restaurant => {\n            return <Card className=\"mb-3\" key={restaurant._id}>\n            <Card.Header>\n              { restaurant.name }\n              <Button className=\"float-right\" type=\"button\" size=\"sm\" variant=\"primary\" onClick={() => addToCollection(restaurant._id)}> Add to collection </Button>\n            </Card.Header>\n            <Card.Body>\n              { groupSchedule(restaurant.schedule).map(schedule => {\n                return <Badge pill variant={ watch('time') && isTimeMatch(schedule.startTime, schedule.endTime) ? 'warning' : 'light' } key={schedule._id}>\n                  { schedule.days.map(day => {\n                    return <Badge pill className=\"mr-2\" variant={ watch('date') && isDayMatch(day) ? 'warning' : 'light' } key={day}> { toDay(day) } </Badge>\n                  }) }\n                  <span>{ moment.utc(schedule.startTime).format('hh:mm:ss a') } - { moment.utc(schedule.endTime).format('hh:mm:ss a') } </span>\n                </Badge>\n              }) }\n            </Card.Body>\n          </Card>\n        }) }\n        <Pagination>\n          {pages}\n        </Pagination>\n      </div> : <div>\n        <h3>No Result Found</h3>\n      </div> }\n    </Container>\n\n    <Modal show={showCollections} onHide={handleCloseCollections}>\n      <Modal.Header> Select Collection </Modal.Header>\n      <Modal.Body className=\"text-center\">\n        { collections.map(collection => {\n          return <Button block variant=\"secondary\" onClick={()=>handleSelectCollection(collection._id)} key={collection._id}> {collection.name} ({collection.restaurants.length}) </Button>\n        }) }\n      </Modal.Body>\n      <Modal.Footer>\n        <Button className=\"form-control\" variant=\"primary\" onClick={handleShowCreateCollection}> New Collection </Button>\n        <Button className=\"form-control\" variant=\"secondary\" onClick={handleCloseCollections}> Cancel </Button>\n      </Modal.Footer>\n    </Modal>\n\n    <Modal show={showCreateCollection} onHide={handleCloseCreateCollection}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmitCollection(onCollectionSubmit)}>\n        <Modal.Header> Create New Collection </Modal.Header>\n        <Modal.Body className=\"text-center\">\n          <FormGroup>\n            <Form.Label> Collection Name </Form.Label>\n            <Form.Control name=\"name\" type=\"text\" id=\"name\" placeholder=\"Enter collection name\" ref={registerCollection({ required: true })} isInvalid={collectionErrors.name}/>\n            { collectionErrors.name && <Form.Control.Feedback type=\"invalid\">\n              { collectionErrors.name.type === 'required' && <p>Name is required</p> }\n            </Form.Control.Feedback> }\n          </FormGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button className=\"form-control\" type=\"submit\" variant=\"primary\"> Submit </Button>\n          <Button className=\"form-control\" variant=\"secondary\" onClick={handleCloseCreateCollection}> Cancel </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  </>;\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport Users from '../services/Users';\nimport { Container, Row, Col, Form, Card, FormGroup, Button, Alert, Modal } from 'react-bootstrap';\n\nfunction Registration() {\n  const { register, handleSubmit, errors, watch } = useForm();\n  let history = useHistory();\n  const [error, setError] = useState(undefined);\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(true);\n  const handleClose = () => {\n    setShow(false);\n    history.push('/login');\n  };\n  const onSubmit = (data) => {\n    return Users\n      .register(data)\n      .then(user => {\n        setError(undefined);\n        handleShow();\n      })\n      .catch(error => {\n        setError(error && error.response && error.response.data && error.response.data.toLowerCase().indexOf('duplicate') >= 0 ? 'Email already registered' : 'Internal Server Error');\n      });\n  };\n\n  return <>\n    <Container>\n      <Row className=\"mt-5\">\n        <Col md={{ span: 8, offset: 2 }}>\n          <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n            <Card>\n              <Card.Body>\n                <Card.Title> <h5> Registration </h5></Card.Title>\n                {error && <Alert variant=\"danger\"> { error } </Alert>}\n                <Row>\n                  <Col>\n                    <FormGroup>\n                      <Form.Label> Email </Form.Label>\n                      <Form.Control name=\"email\" type=\"email\" id=\"email\" placeholder=\"Enter email\" ref={register({ required: true, pattern: /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/ })}\n                        isInvalid={errors.email}/>\n                      { errors.email && <Form.Control.Feedback type=\"invalid\">\n                        { errors.email.type === 'required' && <p>Email is required</p> }\n                        { errors.email.type === 'pattern' && <p>Email is invalid!</p> }\n                      </Form.Control.Feedback> }\n                    </FormGroup>\n                    <FormGroup>\n                      <Form.Label> Password </Form.Label>\n                      <Form.Control name=\"password\" type=\"password\" id=\"password\" placeholder=\"Enter password\" ref={register({ required: true })}\n                        isInvalid={errors.password}/>\n                      { errors.password && <Form.Control.Feedback type=\"invalid\">\n                        { errors.password.type === 'required' && <p>Password is required</p> }\n                      </Form.Control.Feedback> }\n                    </FormGroup>\n                    <FormGroup>\n                      <Form.Label> Retype Password </Form.Label>\n                      <Form.Control name=\"retypePassword\" type=\"password\" id=\"retypePassword\" placeholder=\"Retype password\" ref={register({ required: true, validate: (value) => { return value === watch('password') } })}\n                        isInvalid={errors.retypePassword}/>\n                      { errors.retypePassword && <Form.Control.Feedback type=\"invalid\">\n                        { errors.retypePassword.type === 'required' && <p>Please retype password</p> }\n                        { errors.retypePassword.type === 'validate' && <p>Passwords did not match</p> }\n                      </Form.Control.Feedback> }\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer>\n                <Row>\n                  <Col md=\"6\" lg=\"4\">\n                    <Button className=\"form-control\" type=\"submit\" variant=\"primary\"> Submit </Button>\n                  </Col>\n                  <Col md=\"6\" lg=\"4\">\n                    <LinkContainer to=\"/\">\n                      <Button className=\"form-control\" type=\"button\" variant=\"secondary\"> Cancel </Button>\n                    </LinkContainer>\n                  </Col>\n                </Row>\n              </Card.Footer>\n            </Card>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Body className=\"text-center\">\n        <p> Successfully Registered! </p>\n        <Button variant=\"primary\" onClick={handleClose}> Ok </Button>\n      </Modal.Body>\n    </Modal>\n  </>;\n}\n\nexport default Registration;","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport Users from '../services/Users';\nimport { Container, Row, Col, Form, Card, FormGroup, Button, Alert } from 'react-bootstrap';\n\nfunction Login(props) {\n  const { register, handleSubmit, errors } = useForm();\n  let history = useHistory();\n  const [error, setError] = useState(undefined);\n  const onSubmit = (data) => {\n    return Users.login(data)\n      .then(user => {\n        setError(undefined);\n        props.onAuthUpdate();\n        history.push('/');\n      })\n      .catch(error => {\n        setError((error && error.response && error.response.data && error.response.data.message) || 'Unable to login. Check credentials');\n      });\n  };\n\n  return (\n    <Container>\n      <Row className=\"mt-5\">\n        <Col md={{ span: 8, offset: 2 }}>\n          <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n            <Card>\n              <Card.Body>\n                <Card.Title> <h5> Login </h5></Card.Title>\n                {error && <Alert variant=\"danger\"> { error } </Alert>}\n                <Row>\n                  <Col>\n                    <FormGroup>\n                      <Form.Label> Email </Form.Label>\n                      <Form.Control name=\"email\" type=\"email\" id=\"email\" placeholder=\"Enter email\" ref={register({ required: true, pattern: /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/ })}\n                        isInvalid={errors.email}/>\n                      { errors.email && <Form.Control.Feedback type=\"invalid\">\n                        { errors.email.type === 'required' && <p>Email is required</p> }\n                        { errors.email.type === 'pattern' && <p>Email is invalid!</p> }\n                      </Form.Control.Feedback> }\n                    </FormGroup>\n                    <FormGroup>\n                      <Form.Label> Password </Form.Label>\n                      <Form.Control name=\"password\" type=\"password\" id=\"password\" placeholder=\"Enter password\" ref={register({ required: true })}\n                        isInvalid={errors.password}/>\n                      { errors.password && <Form.Control.Feedback type=\"invalid\">\n                        { errors.password.type === 'required' && <p>Password is required</p> }\n                      </Form.Control.Feedback> }\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer>\n                <Row>\n                  <Col md=\"4\">\n                    <Button className=\"form-control\" type=\"submit\" variant=\"primary\"> Login </Button>\n                  </Col>\n                  <Col md=\"4\">\n                    <LinkContainer to=\"/register\">\n                      <Button className=\"form-control\" type=\"button\" variant=\"success\"> Register </Button>\n                    </LinkContainer>\n                  </Col>\n                  <Col md=\"4\">\n                    <LinkContainer to=\"/\">\n                      <Button className=\"form-control\" type=\"button\" variant=\"secondary\"> Cancel </Button>\n                    </LinkContainer>\n                  </Col>\n                </Row>\n              </Card.Footer>\n            </Card>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Card, Badge, Button } from 'react-bootstrap';\nimport Users from '../services/Users';\nimport * as moment from 'moment';\n\nfunction Collection () {\n  const [collections, setCollections] = useState([]);\n\n  const getCollections  = () => {\n    Users.collections()\n      .then((response) => {\n        setCollections(response && response.data ? response.data.data : []);\n      });\n  }\n\n  useEffect(() => {\n    getCollections();\n  }, []);\n\n\n  const toDay = (day) =>  {\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    return days[day];\n  };\n\n  const groupSchedule = (schedules) =>  {\n    return schedules.reduce((previous, { day,  startTime, endTime, _id }) => {\n      const match = previous.filter((value) => {\n        return value.startTime === startTime && value.endTime === endTime;\n      })[0]\n      if (match) {\n        match.days.push(day);\n      } else {\n        previous.push({\n          _id,\n          startTime,\n          endTime,\n          days: [day]\n        });\n      }\n      return previous;\n    }, []);\n  }\n\n  return <Container>\n    <h3> Your Collections: </h3>\n    { collections.map(collection => {\n      return <Card key={collection._id}>\n        <Card.Header>\n          {collection.name} Collection \n          { collection.owners.map(owner => {\n            return <Badge key={owner._id} variant=\"warning\" pill className=\"mr-2\"> {owner.email} </Badge>\n          }) }\n        </Card.Header>\n        <Card.Body>\n          { collection.restaurants.map(restaurant => {\n              return <Card className=\"mb-3\" key={restaurant._id}>\n              <Card.Header> { restaurant.name } </Card.Header>\n              <Card.Body>\n                { groupSchedule(restaurant.schedule).map(schedule => {\n                  return <Badge pill variant='light' key={schedule._id}>\n                    { schedule.days.map(day => {\n                      return <Badge pill className=\"mr-2\" variant='light' key={day}> { toDay(day) } </Badge>\n                    }) }\n                    <span>{ moment.utc(schedule.startTime).format('hh:mm:ss a') } - { moment.utc(schedule.endTime).format('hh:mm:ss a') } </span>\n                  </Badge>\n                }) }\n              </Card.Body>\n            </Card>\n          }) }\n        </Card.Body>\n      </Card>\n    }) }\n  </Container>;\n}\n\nexport default Collection;\n","import React, { Component } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Home from './components/Home';\nimport Registration from './components/Registration';\nimport Login from './components/Login';\nimport Collection from './components/Collection';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Users from './services/Users';\n\nclass App extends Component {\n  state = {\n    isLoggedIn: false,\n    user: undefined\n  };\n\n  isLoggedIn = () => {\n    return !!localStorage.getItem('email');\n  };\n\n  getUser = () => {\n    return localStorage.getItem('email');\n  };\n\n  logout = () => {\n    Users.logout();\n    this.onAuthUpdate();\n  };\n\n  onAuthUpdate = () => {\n    this.setState({\n      isLoggedIn: this.isLoggedIn(),\n      user: this.getUser()\n    })\n  };\n  \n  constructor() {\n    super();\n    this.state = {\n      isLoggedIn: this.isLoggedIn(),\n      user: this.getUser()\n    };\n  };\n\n  render() {\n    const greetings = this.state.isLoggedIn ? <span className=\"float-right\">Hi { this.state.user }!</span> : '';\n    const unauthenticatedLinks = <Nav className=\"mr-auto\">\n      <LinkContainer to=\"/login\">\n        <Nav.Link> Login </Nav.Link>\n      </LinkContainer>\n    </Nav>;\n    const authenticatedLinks = <Nav className=\"mr-auto\">\n      <LinkContainer to=\"/collections\">\n        <Nav.Link>Collections</Nav.Link>\n      </LinkContainer>\n      <Nav.Link onClick={this.logout}>Logout</Nav.Link>\n    </Nav>;\n    const links = this.state.isLoggedIn ? authenticatedLinks : unauthenticatedLinks;\n\n    return <Router>\n      <div>\n        <Navbar bg=\"light\" expand=\"lg\">\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>Demo Restaurants App</Navbar.Brand>\n          </LinkContainer>\n          { greetings }\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            {links}\n          </Navbar.Collapse>\n        </Navbar>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/login\">\n            <Login onAuthUpdate={this.onAuthUpdate} />\n          </Route>\n          <Route path=\"/register\">\n            <Registration />\n          </Route>\n          <Route path=\"/collections\">\n            <Collection />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}